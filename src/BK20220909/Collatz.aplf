 Collatz←{
    ⎕IO←0   ⍝ Use ⎕FR←1287 for big integers
  ⍝ Collatz Conjecture tool...
  ⍝ Syntax:
  ⍝  Result ← Collatz CV
  ⍝           CV: a vector of integers
  ⍝  Let CV  be a vector of Collatz Numbers, each an integer (possible ≤0).
  ⍝   - For each Collatz number c0 in CV 
  ⍝     ∘ Let c0 be the initial number c
  ⍝       c←c0
  ⍝     ∘ Iterate each subsequent number c from the previous:
  ⍝       c←c÷2    if c is even, else
  ⍝       c←1+3×c  if c is odd.
  ⍝       Note MAX, the Collatz number for this c0 seen with the largest absolute value (Farthest from 0)
  ⍝       Note ITER, the number of iterations thus far ("Total Stopping Time")
  ⍝     ∘ Terminate when c completes* the first cycle of an infinitely repeating cycle:
  ⍝       * or enters the cycle, only the iterations (ITER) will differ, and by a fixed amount.
  ⍝       For c>0, count iterations until repeating cycle ending in 1 (full cycle: 4..2..1)
  ⍝       For c=0, until 0
  ⍝       For c<0, until repeating cycles beginning/ending ¯1/¯2, ¯5/¯10, or ¯17/¯34 
  ⍝     ∘ Return R, a vector of 3 items:
  ⍝       C0,  MAX, ITER  
  ⍝  Result: Generate and return the overall result:
  ⍝   - Mix the results from all such calculations (↑R) above and top with a header row.
  ⍝
  ⍝ Info on Collatz Numbers:
  ⍝      Info:   https://en.wikipedia.org/wiki/Collatz_conjecture
  ⍝      Video:  https://www.youtube.com/watch?v=094y1Z2wpJg
  ⍝      Info:   https://tinyurl.com/5crz8rpw
  ⍝
  ⍝ Example: 
  ⍝   Collatz 9663 63728127 ¯637281271   ⊣ ⎕FR←1287 ⊣ ⎕PP←34
  ⍝            c0           MAX        ITER 
  ⍝    ¯¯¯¯¯¯¯¯¯¯    ¯¯¯¯¯¯¯¯¯¯  ¯¯¯¯¯¯¯¯¯¯ 
  ⍝          9663      27114424         184 
  ⍝      63728127  966616035460         949 
  ⍝    ¯637281271  ¯39243033740         249  

  ⍝ Icing...
    0:: ⎕SIGNAL/⎕DMX.{
        11 9≡EN ENX: 11,⍨⊂'RANGE ERROR: A Collatz num (c) not in int. range. Cannot evaluate 2|c.' 
        EN,⍨⊂EM,((×≢∘⊢)(/∘⊢)': ',⊢)Message             
    }0
    0∊⍵=⌊⍵:11 ⎕SIGNAL⍨'Collatz numbers must be integers'

  ⍝ Cake...
  ⍝ We stop at the END of the (first of the infinitely) repeating cycles
  ⍝          Begins Ends
  ⍝ For c>0, the cycle begins at 4 and ends at 1
  ⍝ For c=0, it ends at 0
  ⍝ For c<0, it begins/ends at ¯1/¯2, ¯5/¯10, ¯17/¯34

    EndNow←∊∘1 0 ¯2 ¯10 ¯34
    AC←<⍥|⊃,                             ⍝ Abs Ceiling: Return signed ⍵ if (|⍺)<(|⍵), else signed ⍺.
                                         ⍝ If c0>0, both c>0 and max>0 by def, so max⌈c would be more efficient.
    ColEach←↑{                           ⍝ Pedagogical Style-- performance improvements abound
                                         ⍝ Initialize state vector:  c0, MAX=C0, ITER=0
        ⍺←⍵ ⍵ 0                          ⍝    To exclude initial value c0 from MAX, ⍺←c0 (×c0) 0
        EndNow ⍵:⍺                       ⍝ Done? ==> Return current state vector
        c0 max i←⍺                       ⍝ Initial Collatz num, MAX so far, iterations
        2|⍵:c0(max AC c)(i+1)∇ c←1+3×⍵   ⍝   Odd? => Next c ← 1 + 3 × c
        c0(max AC c)(i+1)∇ c←⍵×0.5       ⍝   Even?=> Next c ← c ÷ 2

    }¨⍤,

  ⍝ Decorations...
    hdr←↑'c0' 'MAX' 'ITER',⍥⊂3⍴⊂10⍴'¯'

  ⍝ Ingestion, Digestion...
    res←ColEach ⍵

  ⍝ ...and Out!
    hdr⍪res

 }
