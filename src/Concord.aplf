   Concord file

    ; Dict; Highlight; LineFmt; LNumFmt; Skip; WordList; WordFmt
    ; CHAR_STD; CHAR_BOLD; WORD_LEN; LINE_LEN; LNUM_LEN; MAX_WIDTH
    ; len; line; lines; lNum; lNums; lNumField; match; offset; rec; recs; word; wordRaw
    ; wCurL; w2Line; wFreq 
    ; ⎕IO; ⎕PW

  ⍝ Demo text...
    {}⎕SE.UCMD 'load Dict.aplf'
    :IF 0=≢file 
       :IF 0=⎕NC '#.SHAKESPEARE'
           {
            #.SHAKESPEARE← (⎕UCS 10)(≠⊆⊢) 5000↑13006↓⎕OR _←⎕SE.UCMD 'get ',⍵
            ⎕←'Loaded #.SHAKESPEARE'
            1: _←⎕EX _
           }'https://ocw.mit.edu/ans7870/6/6.006/s08/lecturenotes/files/t8.shakespeare.txt'
       :ENDIF
       file← #.SHAKESPEARE
    :ENDIF 

    ⎕IO←0
    ⎕PW← MAX_WIDTH← 120

    LNUM_LEN ← 4  
    LNumFmt← (⍕LNUM_LEN)∘{,⍵ ⎕FMT⍨ 'ZI',⍺}

    WordList←{
        '([:⎕]?[\w_∆⍙]+(?:''[st])?)' ⎕S 0 1⊣⍵
    }
    
    Highlight←{ 
      line wordRaw←⍺ ⍵
      Repl←{ w←⍵ ⋄ B←⍵∊CHAR_STD ⋄ (B/w)←CHAR_BOLD[CHAR_STD⍳B/w] ⋄ w}
      ('(?<![⎕:])\b',wordRaw,'\b') ⎕R {Repl ⍵.Lengths[0]↑⍵.Offsets[0]↓⍵.Block}   ⍠1 ⊣ line
    }
       CHAR_STD←     ⎕A,⎕C⎕A 
       CHAR_BOLD←    ⎕UCS (⎕UCS '𝐀')+⍳52

    Skip← ∊∘(⎕D,'⎕:') 

    wFreq←   0 Dict ⍬         ⍝ Word frequencies
    w2Line←  ⍬ Dict ⍬         ⍝ Word to lNum and lines
    
    lNum←0 
    ⎕← 'Source text' 
    LINE_LEN← MAX_WIDTH - LNUM_LEN + 3
    :FOR line :IN file
         lNum+←1 ⋄ thisLine← 0 Dict ⍬
         wCurL←⍬

         ⎕← (LNumFmt lNum), ' | ',(LINE_LEN↑ line)
         
        :For offset len :IN  WordList line
            wordRaw←len↑ offset↓ line
            word← ⎕C wordRaw 
            :IF Skip ⊃wordRaw ⋄ :Continue ⋄ :ENDIF 
            wCurL,← ⊂word wordRaw 
            word +wFreq.Do 1
        :EndFor
      ⍝ For each line, highlight all appearances of the word at the same time.
        :For word wordRaw :IN wCurL/⍨ ≠⊃¨wCurL     ⍝ Suppress repeats...
            word w2Line.Cat lNum (line Highlight wordRaw)
        :EndFor 
    :ENDFOR 
    ⎕←''

    WORD_LEN← ⌈/≢¨wFreq.Keys
    LINE_LEN← MAX_WIDTH- (LNUM_LEN + WORD_LEN + 2×3)   ⍝ 3 per ' | '
    
    WordFmt← WORD_LEN∘↑
    LineFmt← LINE_LEN∘↑

    w2Line.    (SortBy  Keys)

    ⎕←'Word Frequencies and Lines'
    :FOR word recs :IN w2Line.Items
         lNums← ∪⊃¨recs 
         ⎕← (WordFmt word), ' ', ('[',']',⍨⍕wFreq.Get word),' ', 2↓∊(⊂', '),∘ ⍕ ¨lNums 
    :ENDFOR    
    ⎕←''

    ⎕←'Concordance'
    :FOR word recs :IN  w2Line.Items
         :FOR lNum line :IN recs
            ⎕← (LNumFmt lNum), ' | ', (WordFmt word), ' | ', (LineFmt line)
         :ENDFOR 
    :ENDFOR

